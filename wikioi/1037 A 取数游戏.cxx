#include <iostream>
#include <cstdio>
using namespace std;
/*
有一个有趣得取数游戏。初始时，给出一个环，环上得每条边上都有一个非负整数。这些整数中至少有一个时0。然后，将一枚硬币放在环上得一个节点上。二个玩家就是以这
* 个放硬币得节点为起点开始这个游戏，二人轮流取数，取数得规则如下：
（1）选择硬币左边或右边得一条边，并且边上得数非0；
（2）将这条边上的数减至任意一个非负整数（至少要有所减小）；
（3）将硬币移到边的另一端。
如果轮到一个玩家走，这时硬币左右两边的边上的数值都是0，那么这个玩家就输了。
如下图所示，描述的时爱丽思和鲍勃两人的对弈过程，其中黑色节点表示硬币所在节点，结果图（d）中，轮到鲍勃走时，硬币两边的边上都是0。所以爱丽思获胜。
现在你的任务是根据给出的环、边上的数值以及起点（硬币所在位置），判断先走方是否有必胜的策略。
*/
//如果先手的位置走过奇数步（一直往左走或者往右走），能够到达0这条边之前的那个点，那么先手必胜，否则，先手必败。
int main(int argc, char **argv)
{
	int n;
	int len[21] = {0};
	cin >> n;
	for(int i = 1; i <= n; ++i)
		scanf("%d", &len[i]);
	int k1 = 0, k2 = 0;
	for(int i = 1; i <= n; ++i)
	{
		if(len[i] == 0)
		{
			k1 = i - 2;
			break;
		}
	}
	for(int i = 1; i <= n; ++i)
	{
		if(len[n+1-i] == 0)
		{
			k2 = i - 2;
			break;
		}
	}
	if((k1 >= 0 && k1 % 2 == 0) || (k2 >= 0 && k2 % 2 == 0))
		printf("YES");
	else
		printf("NO");
	return 0;
}
/*
输入描述 Input Description
输入：第行一个整数N（N<=20），表示环上的节点数。
第2行N个数，数值不超过30，依次表示N条边上的数值。硬币的起始位置是第一条边与最后一条边之间的节点上。
输出描述 Output Description
输出：仅1行。若存在必胜策略，则输出‘YES’，否则输出‘NO’。
样例输入 Sample Input
样例1:
4
2  5  3  0
样例2:
3
0  0  0
样例输出 Sample Output
样例1:
YES
样例2:
NO
数据范围及提示 Data Size & Hint
如描述 
*/
